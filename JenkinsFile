pipeline {
    agent any

    parameters {
        string(name: 'URL_BACKEND', defaultValue: 'http://localhost:8080', description: 'Dirección del Backend')
        string(name: 'HTDOCS_DIR', defaultValue: 'c:\\xampp\\htdocs', description: 'Ruta de la carpeta htdocs de XAMPP, WAMP o servidor Apache que se esté utilizando')
    }

    stages {
        stage('Get Repo') {
            steps {
                echo 'Clonando repositorio desde GitHub'
                git branch: 'master', url: 'https://github.com/gavo/solid-fe.git'
            }
        }

        stage('Install dependencies') {
            script {
                def yarnLockChanged = sh(script: 'git diff --name-only HEAD~1 HEAD | findstr "yarn.lock"', returnStatus: true) == 0
                if (yarnLockChanged) {
                    echo 'Nuevo paquete detectado en yarn.lock, ejecutando yarn install...'
                    bat 'yarn install'
                } else {
                    echo 'No se detectaron cambios en yarn.lock. Saltando yarn install...'
                }
            }
        }

        stage('Setup .env file') {
            steps {
                script {
                    def propertiesContent = """
VITE_API_URL=${URL_BACKEND}/api
"""
                    writeFile file: '.env', text: propertiesContent
                }
            }
        }

        stage('Build') { 
            steps {
                bat 'yarn build'
            }
        }

        stage('Copy to HTDOCS') {
            steps {
                echo "Copiando archivos construidos al directorio ${HTDOCS_DIR}..."
                bat """
                rmdir /S /Q "${HTDOCS_DIR}" || echo "No se pudo eliminar ${HTDOCS_DIR}, tal vez no exista aún."
                mkdir "${HTDOCS_DIR}"
                xcopy /E /I /Y dist "${HTDOCS_DIR}"
                """
            }
        }
    }
    
    post {
        success {
            echo 'Pipeline completado exitosamente.'
        }
        failure {
            echo 'El pipeline falló.'
        }
    }
}